/* For this project I've chosen for a selector first methodology */
/* The CSS order is the same as the HTML (top - bottom) */

/* Delcare CSS Custom Properties */

:root {
    --gigantic-space: 20vh;
    --big-space: 80px;
    --normal-space: 30px;
    --small-space: 10px;
    font-family: Helvetica, Arial, sans-serif;
    cursor: var(--cursor-anim1);
    --primary-color: rgb(255, 255, 255);
    --secondary-color: rgb(0, 0, 0);
    --abnormal-cursor: url(./media/cursor_light_anim1.png), auto;
    --cursor-anim1: url(./media/cursor_dark_anim1_1.png), auto;
    --cursor-anim2: url(./media/cursor_dark_anim2_1.png), auto;
    --cursor-anim3: url(./media/cursor_dark_anim3_1.png), auto;
    --cursor-anim4: url(./media/cursor_dark_anim4_1.png), auto;
    --cursor-anim5: url(./media/cursor_dark_anim5_1.png), auto;
}

main>div:last-of-type {
    background-image: linear-gradient(to right, rgba(0, 0, 0, 0.01) 25%, rgba(0, 0, 0, 1) 50%, rgba(0, 0, 0, 0.01) 75%);
}

/* Dark Mode System Preferences */

@media (prefers-color-scheme: dark) {
    :root {
        --primary-color: rgb(0, 0, 0);
        --secondary-color: rgb(255, 255, 255);
        --abnormal-cursor: url(./media/cursor_dark_anim1.png), auto;
        --cursor-anim1: url(./media/cursor_light_anim1_1.png), auto;
        --cursor-anim2: url(./media/cursor_light_anim2_1.png), auto;
        --cursor-anim3: url(./media/cursor_light_anim3_1.png), auto;
        --cursor-anim4: url(./media/cursor_light_anim4_1.png), auto;
        --cursor-anim5: url(./media/cursor_light_anim5_1.png), auto;
    }

    main>div:last-of-type {
        background-image: linear-gradient(to right, rgba(255, 255, 255, 0.01) 25%, rgba(255, 255, 255, 1) 50%, rgba(255, 255, 255, 0.01) 75%);
    }
}

/* Light Mode Manual Toggle */

#head:target+body {
    cursor: var(--cursor-anim1);
    --primary-color: rgb(255, 255, 255);
    --secondary-color: rgb(0, 0, 0);
    --abnormal-cursor: url(./media/cursor_light_anim1.png), auto;
    --cursor-anim1: url(./media/cursor_dark_anim1_1.png), auto;
    --cursor-anim2: url(./media/cursor_dark_anim2_1.png), auto;
    --cursor-anim3: url(./media/cursor_dark_anim3_1.png), auto;
    --cursor-anim4: url(./media/cursor_dark_anim4_1.png), auto;
    --cursor-anim5: url(./media/cursor_dark_anim5_1.png), auto;
}

#head:target+body>main>div:last-of-type {
    background-image: linear-gradient(to right, rgba(0, 0, 0, 0.01) 25%, rgba(0, 0, 0, 1) 50%, rgba(0, 0, 0, 0.01) 75%);
}

/* Declare Properties that should be as global as possible and won't be overwritten */

::selection {
    background-color: none;
}

::-webkit-scrollbar {
    display: none;
}

/* All "hidden" clues should have a cursor animation as a hint to the users */

[clue="true"] {
    animation: exploreIndicator 500ms infinite;
}

/* Loop through different cursor sizes */
@keyframes exploreIndicator {
    0% {
        cursor: var(--cursor-anim1)
    }

    25% {
        cursor: var(--cursor-anim2)
    }

    50% {
        cursor: var(--cursor-anim3)
    }

    75% {
        cursor: var(--cursor-anim4)
    }

    100% {
        cursor: var(--cursor-anim5)
    }
}

/* Different ways of encrypting text -> make text more difficult to read */

[encryption]::after {
    display: none;
}

[encryption="flipped"] {
    transform: rotate(180deg);
    text-align: right;
}

[encryption="RTL"] {
    direction: rtl;
    unicode-bidi: bidi-override;
    text-align: left;
}

[encryption="flippedRTL"] {
    direction: rtl;
    unicode-bidi: bidi-override;
    transform: rotate(180deg);
    text-align: right;
}

/* decrypt text to human readable text */

[encryption="flipped"]:hover,
[encryption]:focus,
[encryption]:active {
    transform: rotate(0deg);
    direction: rtl;
    unicode-bidi: normal;
    text-align: left;
}

/* Story-person Indicator */

[person]::before {
    background-color: var(--secondary-color);
    color: var(--primary-color);
}

[person="Jones"]::before {
    content: "Jones:";
}

[person="You"]::before {
    content: "You:";
}

body {
    margin: 0px;
    width: 100vw;
    background-color: var(--primary-color);
    animation: bgFlickering 10000ms linear 5000ms infinite, crash 30000ms linear infinite;
    overflow-x: hidden;
}

/* Animation to make a flickering background */

@keyframes bgFlickering {

    0%,
    2.5%,
    7.5%,
    12.5%,
    17.5%,
    21%,
    23%,
    25%,
    27% {
        background-color: var(--secondary-color);
    }

    0%,
    5%,
    10%,
    15%,
    20%,
    22%,
    24%,
    26%,
    28%,
    100% {
        background-color: var(--primary-color);
    }
}

/* Animation to stimulate a computer crash for a few seconds */

@keyframes crash {

    5%,
    80% {
        background-image: none;
        width: 100vw;
        height: unset;
        margin: 0px;
    }

    82%,
    100% {
        background-image: repeating-radial-gradient(black 8px, white 12px);
        background-position: top left;
        background-size: 12px 12px;
        width: 300px;
        height: 300px;
        margin: var(--small-space) auto;
    }

    84% {
        background-position: top right;
    }

    86% {
        background-position: bottom right;
    }

    88% {
        background-position: bottom left;

    }

    90% {
        background-position: center;
    }
}

/* Header (aka big text at start of page thats goes crazy) */

main>h1 {
    font-size: 20vw;
    width: 80vw;
    background-color: var(--secondary-color);
    color: var(--primary-color);
    animation: bookEffect 1ms linear infinite forwards;
    transform-origin: 150%;
    line-height: 0.8;
    margin: 5vh 0px 20vh 0px;
}

/* Manual dark/light mode switch links */

main>span {
    max-width: 600px;
    width: 100vw;
    display: block;
    margin: var(--small-space) auto;
}

a,
a:visited,
a:active {
    color: var(--secondary-color);
    cursor: var(--cursor-anim1);
}

/* Fake news carousel which tells you the answer if you're patient */

main>div:first-of-type {
    background-color: var(--secondary-color);
    max-width: 600px;
    white-space: nowrap;
    margin: 0px auto;
    overflow-x: scroll;
    animation: bgFlickering 10000ms linear 5000ms infinite;
}

main>div:first-of-type:hover {
    filter: invert(100%);
    transition: filter 0ms;
}

main>div:first-of-type::before {
    content: "";
    position: absolute;
    z-index: 10;
    left: 0px;
    width: 100vw;
    background-color: var(--secondary-color);
    padding-bottom: 18px;
}

main>div:first-of-type p {
    display: inline-block;
    margin: 0px;
    background-color: var(--secondary-color);
    position: relative;
    top: 0px;
    z-index: 11;
    color: var(--primary-color);
}

/* To avoid using 4 keyframes (one for each <p>) to create different animations, 
I've chosen to use custom properties in 1 keyframe animation, 
this way there are different animations while not taking up 200 lines of CSS code */

main>div:first-of-type p:nth-of-type(1) {
    animation: newsCarousel 32000ms linear infinite 3000ms forwards;
    --moveXPixelsToLeft: 0px;
}

main>div:first-of-type p:nth-of-type(2) {
    animation: newsCarousel 32000ms linear infinite 3000ms forwards;
    --moveXPixelsToLeft: -166px;
}

main>div:first-of-type p:nth-of-type(3) {
    animation: newsCarousel 32000ms linear infinite 3000ms forwards;
    --moveXPixelsToLeft: -426px;
}

main>div:first-of-type p:nth-of-type(4) {
    animation: newsCarousel 32000ms linear infinite 3000ms forwards;
    --moveXPixelsToLeft: -555px;
}

/* Makes text move like it would in a news carousel on TV */

@keyframes newsCarousel {

    0%,
    19%,
    38%,
    57%,
    76%,
    90%,
    100% {
        left: 0px;
    }

    10%,
    29%,
    48%,
    67% {
        left: -350px;
    }

    79%,
    84% {
        left: var(--moveXPixelsToLeft);
    }
}

/* Hide all unnecessary text to show clue/answer */

main>div:first-of-type p:nth-of-type(4) span {
    animation: fadeAway 32000ms linear infinite 3000ms forwards;
}

/* Fade out all unnecessary text (and reset) */

@keyframes fadeAway {

    0%,
    78%,
    85%,
    100% {
        color: var(--primary-color);
    }

    79%,
    84% {
        color: var(--secondary-color);
    }
}

/* First part of story */

article {
    width: 100vw;
    height: fit-content;
    position: relative;
    margin-bottom: var(--big-margin);
}

article h1,
article p {
    color: var(--secondary-color);
    width: 100vw;
    text-align: left;
    margin: var(--small-space) auto;
    max-width: 600px;
}

main>article:first-of-type {
    margin-bottom: var(--gigantic-space);
}

main>article:first-of-type h1:first-of-type {
    animation: weirdTitleText 10000ms ease-in-out 0s infinite alternate-reverse;
}

/* Animation which rotates the title a bunch of times */

@keyframes weirdTitleText {
    from {
        transform: rotateZ(0deg);
    }

    to {
        transform: rotateZ(1800deg);
    }
}

main>article:first-of-type p:last-of-type {
    margin: var(--normal-space) auto;
}

article:first-of-type p:last-of-type span:not([person]) {
    color: var(--primary-color);
    text-decoration: underline;
    text-decoration-color: var(--secondary-color);
}

/* Make clue visible if text is selected */

main>article:first-of-type p:last-of-type span:not([person])::selection {
    background-color: var(--secondary-color);
}

main>article:nth-of-type(2) {
    margin-bottom: 0px;
}

/* First scroll clue */

main>div:nth-of-type(2) {
    background-color: var(--primary-color);
    width: 100vw;
    max-width: 600px;
    height: 60px;
    margin: var(--small-space) auto;
    overflow-y: scroll;
}

main>div:nth-of-type(2) p {
    padding: 100px 0px 30px 0px;
    margin: 0px;
    width: 100%;
    text-align: center;
    color: var(--secondary-color);
}

main>div:nth-of-type(2) p:active {
    text-align: center;
}

/* Story part 2 */
/* spacey-text which rotates the Z axis with constantly changing perspective */

main>article:nth-of-type(2) h1 {
    margin: 100px 12vw;
    animation: changePerspective 10000ms infinite linear alternate;
}

@keyframes changePerspective {
    from {
        perspective: 200px;
    }

    to {
        perspective: 600px;
    }
}

main>article:nth-of-type(2) h1 div {
    animation: bookEffect 1ms linear infinite forwards;
    background-color: var(--secondary-color);
    color: var(--primary-color);
    width: 38vw;
    transform-origin: 100%;
}

/* This animation makes the spacy texts -> it's 1 element which tries to rotate a full 360 degrees every millisecond. 
This results in a effect where the user sees the text appear 3 times (all in different angles).
This is because of the so called shutter-effect -> our eyes (and technology) can only handle x amount of frames per second.
Meaning that if something moves to fast -> we are missing gaps.
Things that move at certain speeds (in a circle) appear to be standing still or moving at different speeds because
we can only see that small chunk of the animation/movement*/

@keyframes bookEffect {
    from {
        transform: rotateY(0deg);
    }

    to {
        transform: rotateY(360deg);
    }
}

main>article:nth-of-type(2)>div p {
    margin: 0px auto;
    display: block;
    transform: rotate(90deg);
}

main>article:nth-of-type(2)>div:last-of-type {
    transform: rotate(270deg);
}

/* Change text content when the user hovers over the element by switching display values */

main>article:nth-of-type(2)>div p:last-of-type,
main>article:nth-of-type(2)>div:hover p:first-of-type,
main>article:nth-of-type(2)>div:active p:first-of-type {
    display: none;
}

main>article:nth-of-type(2)>div:hover p:last-of-type,
main>article:nth-of-type(2)>div:active p:last-of-type {
    display: block;
}

/* Scrollable clue #2 */

main>div:nth-of-type(3) {
    background-color: var(--primary-color);
    width: 100vw;
    max-width: 600px;
    height: 120px;
    margin: 0px auto;
    overflow-x: scroll;
    animation: bgFlickering 10000ms linear 5000ms infinite;
}

main>div:nth-of-type(3) p {
    padding: 40px 120px 40px 0px;
    width: 200%;
    text-align: right;
    color: var(--secondary-color);
    animation: exploreIndicator 500ms infinite;
}

/* spacey gradient (used just as decoration) */

main>div:nth-of-type(4) {
    background-image: repeating-radial-gradient(black 8px, white 12px);
    width: 300px;
    height: 300px;
    margin: var(--small-space) auto;
    animation: trippyGradientDirections 10000ms linear infinite, trippyGradientSize 400ms linear infinite;
}

/* Make the gradient move in different directions from multiple angles */
@keyframes trippyGradientDirections {

    0%,
    40% {
        background-position: top left;
    }

    10% {
        background-position: top right;
    }

    20% {
        background-position: bottom right;
    }

    30% {
        background-position: bottom left;
    }

    50%,
    100% {
        background-position: center;
    }
}

/* Make the trippy/loop effect */

@keyframes trippyGradientSize {
    from {
        background-size: 12px 12px;
    }

    to {
        background-size: 24px 24px;
    }
}

/* Horizontal gradient line */

main>div:nth-last-child(3) {
    margin: 10vh 0vh;
    height: 100px;
    width: 150vw;
    animation: gradientBG 5000ms linear 0ms infinite, horizontalMovingBG 5000ms linear 0ms infinite alternate-reverse, exploreIndicator 500ms infinite;
}

/* Animate the gradient patterns */

@keyframes gradientBG {
    0% {
        background-image: repeating-linear-gradient(to bottom, rgba(0, 0, 0, 1) 0%, rgba(0, 0, 0, 1) 2%, rgba(255, 255, 255, 1) 2.01%, rgba(255, 255, 255, 1) 4%);
    }

    50% {
        background-image: repeating-linear-gradient(to right, rgba(0, 0, 0, 1) 0.01%, rgba(0, 0, 0, 1) 0.5%, rgba(255, 255, 255, 1) 0.501%, rgba(255, 255, 255, 1) 1%);
    }

    100% {
        background-image: repeating-linear-gradient(to right, rgba(0, 0, 0, 1) 0.01%, rgba(0, 0, 0, 1) 0.5%, rgba(255, 255, 255, 1) 0.501%, rgba(255, 255, 255, 1) 1%);
    }
}

/* Make the gradient line move horizontally */

@keyframes horizontalMovingBG {
    40% {
        margin-left: 0px;
    }

    90% {
        margin-left: -50vw;
    }

    100% {
        margin-left: -150vw;
    }
}

/* Mugshot section */

section {
    max-width: 600px;
    margin: var(--small-space) auto;
    display: flex;
    flex-wrap: wrap;
    justify-content: space-evenly;
    align-items: flex-start;
    padding-bottom: 50px;
}

/* Encrypted titles */

section>h1,
section>p {
    width: 100%;
    color: var(--secondary-color);
    margin: 0px 0px var(--small-space) 0px;
}

/* Individual mugshots */

details {
    width: calc(50% - 40px);
    min-width: 140px;
    max-width: 172px;
    padding: 2px;
    margin: 5px 5px var(--small-space) 5px;
    background-color: var(--secondary-color);
    display: inline-block;
    cursor: var(--abnormal-cursor);
}

/* mugshot effects/animations */

details:nth-of-type(1n+3):not(:last-of-type):hover {
    transform: rotateZ(180deg);
    transition: all 0ms;
}

details:nth-of-type(4):hover {
    transform: rotateX(360deg);
    transition: all 5000ms;
}

details:nth-of-type(5n+2):hover {
    filter: blur(150px);
    transition: filter 3000ms;
}

details:first-of-type:hover,
details:last-of-type:hover {
    filter: invert(100%);
    transition: filter 300ms;
    cursor: var(--cursor_anim1);
}

/* Clicked mugshots should show user if they guessed correct */

details[open] {
    filter: blur(0px) invert(0%);
    transform: rotateZ(0deg) rotateX(0deg) rotateY(0deg);
    transition: all 0ms;
}

/* Close/minimalize icon */

details:not(:nth-of-type(3))[open]::after {
    content: "x";
    position: absolute;
    top: 3px;
    right: 5px;
    color: var(--primary-color);
    pointer-events: none;
    font-size: 20px;
}

/* Hide standard styling */

summary::-webkit-details-marker {
    display: none;
}

details:focus,
summary:focus {
    outline: none;
}

/* mughot avatars */

details div {
    pointer-events: none;
    width: 100%;
    height: 100%;
    height: 100px;
    max-height: 150px;
    background-color: white;
    cursor: var(--cursor-anim1);
    background-image: var(--mugshot);
    background-size: contain;
    background-position: center;
    background-repeat: no-repeat;
}

details:nth-of-type(1) div {
    --mugshot: url(./media/mugshots/mugshot1.svg);
}

details:nth-of-type(2) div {
    --mugshot: url(./media/mugshots/mugshot2.svg);
}

details:nth-of-type(3) div {
    --mugshot: url(./media/mugshots/mugshot3.svg);
}

details:nth-of-type(4) div {
    --mugshot: url(./media/mugshots/mugshot4.svg);
}

details:nth-of-type(5) div {
    --mugshot: url(./media/mugshots/mugshot5.svg);
}

details:nth-of-type(6) div {
    --mugshot: url(./media/mugshots/mugshot6.svg);
}

/* Correct mugshot -> in jail */

details:nth-of-type(3)[open] div {
    background-image: var(--mugshot), repeating-linear-gradient(to right, rgba(0, 0, 0, 1) 0.01%, rgba(0, 0, 0, 1) 6%, rgba(255, 255, 255, 0) 6.001%, rgba(255, 255, 255, 0) 12%);
}

/* Wrong mugshot */

details:not(:nth-of-type(3))[open] div {
    background-image: var(--mugshot), url(./media/mugshots/wrong.svg);

}

/* mugshot content */

details>summary p {
    width: 100%;
    margin: 5px 0px 0px 0px;
    font-size: 20px;
    color: var(--primary-color);
    pointer-events: none;
    text-align: center;
}

details h2 {
    pointer-events: none;
    color: var(--primary-color);
    text-align: center;
    width: 100%;
    margin: 10px 0px;
    font-size: 20px;
    font-weight: 600;
}

details>p {
    width: calc(100% - 20px);
    margin: 0px 10px 5px 10px;
    color: var(--primary-color);
    font-size: 15px;
    text-align: center;
}

/* Vertical laser */

main>div:last-of-type {
    position: absolute;
    top: 120vh;
    height: 110vh;
    width: 10%;
    z-index: 100;
    mix-blend-mode: exclusion;
    animation: bgGradientHorizontal 5000ms linear 0s infinite alternate;
}

/* Move the vertical laser horizontally */

@keyframes bgGradientHorizontal {
    from {
        margin-left: -10%;
    }

    to {
        margin-left: 100%;
    }
}

/* Prefers reduced motion media rule -> prevent people from having seizures but make sure the app is still usable */

@media (prefers-reduced-motion: reduce) {
    [clue="true"] {
        animation: none;
    }

    main>h1 {
        margin: 0px;
        width: 100vw;
        padding-bottom: 7vh;
    }

    main>h1,
    body,
    main>article:first-of-type h1:first-of-type,
    main>article:nth-of-type(2) h1 div,
    main>div:nth-of-type(3),
    main>div:nth-last-child(3) {
        animation: none;
    }

    main>div:first-of-type::before {
        padding: 0px;
    }

    main>article:first-of-type {
        margin: 0px;
    }

    main>article:nth-of-type(2) h1 {
        margin: 0px auto;
    }


    main>article:nth-of-type(2) h1 div {
        width: 100%;
    }

    main>div:nth-last-child(3) {
        background-image: repeating-linear-gradient(to right, rgba(0, 0, 0, 1) 0.01%, rgba(0, 0, 0, 1) 0.5%, rgba(255, 255, 255, 1) 0.501%, rgba(255, 255, 255, 1) 1%);
        margin-top: 20px;
        margin-bottom: 20px;
    }

    main>div:first-of-type p:nth-of-type(1),
    main>div:first-of-type p:nth-of-type(2),
    main>div:first-of-type p:nth-of-type(3),
    main>div:first-of-type p:nth-of-type(4),
    main>div:last-of-type,
    main>div:nth-of-type(4) {
        display: none;
    }

    details:nth-of-type(3n+2):hover {
        filter: blur(0px);
        transition: filter 0ms;
    }
}